---
- name: create a temp path for the remote kubeconfig
  local_action: shell mktemp -d -t kubeconfig.{{ kubernetes_basic_auth_user.name }}.XXXXXXXXXX
  register: master_kube_config_file

- name: Wait for kube config to show up on master node
  become: yes
  wait_for: path={{ kubernetes_cert_dir }}/{{ kubernetes_basic_auth_user.name }}/kubeconfig timeout=1200 state=present

- name: Wait for kube-ca.pem to show up on master node
  become: yes
  wait_for: path={{ kubernetes_cert_dir }}/kube-ca.pem timeout=1200 state=present

- name: fetch master tls cert
  become: yes
  fetch: src={{ kubernetes_cert_dir }}/kube-ca.pem dest={{ master_kube_config_file.stdout }}/kube-ca.pem flat=yes

- name: Give master a chance to fully generate the file
  pause: seconds=5

- name: cat kubeconfig file
  become: yes
  shell: cat {{ kubernetes_cert_dir }}/{{ kubernetes_basic_auth_user.name }}/kubeconfig
  register: master_kube_config_contents

- name: parse yaml contents of master kubeconfig file
  set_fact: master_kube_config="{{ master_kube_config_contents.stdout | from_yaml }}"

- name: get password
  set_fact: master_password={{ item.user.password }}
  with_items: "{{ master_kube_config.users }}"
  when: item.name == "{{ kubernetes_basic_auth_user.name }}"

- name: write kube config
  local_action: shell {{item}}
  with_items:
    # XXX: drop explicit port from master_record if it's 80/443 to allow kubernetes e2e tests to tack on ':22' for ssh access
    - kubectl --kubeconfig={{ kubeconfig | expanduser }} config set-cluster {{ cluster_name }} --server={{ master_record | regex_replace(':80','') | regex_replace(':443','') }} --certificate-authority={{ master_kube_config_file.stdout }}/kube-ca.pem --embed-certs=true
    - kubectl --kubeconfig={{ kubeconfig | expanduser }} config set-context {{ cluster_name }} --cluster={{ cluster_name }} --user={{ kubernetes_basic_auth_user.name }}
    - kubectl --kubeconfig={{ kubeconfig | expanduser }} config set-credentials {{ kubernetes_basic_auth_user.name }} --username={{ kubernetes_basic_auth_user.name }} --password={{ master_password }}
    - kubectl --kubeconfig={{ kubeconfig | expanduser }} config use-context {{ cluster_name }}
  become: no

- name: delete temp kubeconfig path
  local_action: file path={{ master_kube_config_file.stdout }} state=absent
